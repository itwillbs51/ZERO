<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.zero.mapper.AdminMapper">
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" resultType="com.itwillbs.zero.vo.MemberVO">
		SELECT * FROM MEMBER
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="selectMember" resultType="com.itwillbs.zero.vo.MemberVO">
		SELECT * FROM MEMBER
		WHERE member_idx = #{member_idx}
	</select>
	
	<!-- 회원관리 - 회원 피신고 건수 조회 -->
	<select id="selectMemberReportCount">
		SELECT COUNT(*) 
			FROM REPORT
			WHERE reported_member_id = #{member_id}
	</select>
	
	
	<!-- 회원관리 - 회원 정보 삭제 -->
	<delete id="deleteMemebr">
		DELETE FROM MEMBER
		WHERE member_idx = #{member_idx}
	</delete>
	
	<!-- 회원관리 - 회원 정보 수정 -->
	<update id="updateMember">
		UPDATE MEMBER
			SET
				member_status = #{member_status}
				, member_phone = #{member_phone}
				, member_mail_auth = #{member_mail_auth}
				, member_type = #{member_type}
				, member_bank_auth = #{member_bank_auth}
				<if test="!member_status.equals('탈퇴')">
					, member_withdrawal = null
				</if>
				<if test="member_status.equals('탈퇴')">
					, member_withdrawal = #{member_withdrawal}
				</if>
			WHERE member_idx = #{member_idx}
	</update>
	
	<!-- 회원관리 - 회원 신고 목록 조회 -->
	<select id="selectMemberReportList" resultType="com.itwillbs.zero.vo.ReportVO">
		SELECT * FROM REPORT
			WHERE 
				report_type = '회원'
			<if test="!reported_member_id.equals('')">
				AND
					reported_member_id = #{reported_member_id}
			</if>
	</select>
	
	<!-- 회원관리 - 회원 신고 정보 조회 -->
	<select id="selectMemberReportDetail" resultType="com.itwillbs.zero.vo.ReportVO">
		SELECT * FROM REPORT
		WHERE report_idx = #{report_idx}
	</select>
	
	<!-- 회원관리 - 회원 신고 정보 수정(처리상태 변경) -->
	<update id="updateMemberReport">
		UPDATE REPORT
			SET 
				report_status = #{report_status}
			WHERE 
				report_idx = #{report_idx}
	</update>
	
	<!-- zman 관리 - zmna 목록 조회 -->
	<select id="selectZmanList" resultType="com.itwillbs.zero.vo.ZmanVO">
		SELECT * FROM ZMAN
		ORDER BY zman_date DESC
	</select>

	<!-- zman 관리 - zmna 정보 조회 -->
	<select id="selectZman" resultType="com.itwillbs.zero.vo.ZmanVO">
		SELECT * FROM ZMAN
		WHERE zman_idx = #{zman_idx}
	</select>
	
	<!-- zman관리 - zman 정보 삭제 -->
	<delete id="deleteZamn">
		DELETE FROM ZMAN
		WHERE zman_idx = #{zman_idx}
	</delete>
	
	<!-- zman관리 - zman 정보 수정 -->
	<update id="updateZman">
		UPDATE ZMAN
			SET
				zman_status = #{zman_status}
				, zman_phone = #{zman_phone}
				<if test="!zman_status.equals('탈퇴')">
					, zman_withdrawal = null
				</if>
				<if test="zman_status.equals('탈퇴')">
					, zman_withdrawal = #{zman_withdrawal}
				</if>
			WHERE zman_idx = #{zman_idx}
	</update>
	
	<!--  zman 관리 - 배달 내역 목록 조회 - SELECT -->
	<select id="selectDeliveryList" resultType="com.itwillbs.zero.vo.ZmanDeliveryVO">
		SELECT
				zd.*
				, os.order_secondhand_product 
				, z.zman_name
			FROM ZMAN_DELIVERY zd 
			JOIN 
				ORDER_SECONDHAND os 
				ON
					zd.order_secondhand_idx = os.order_secondhand_idx
			JOIN
				ZMAN z 
				ON 
					zd.zman_idx = z.zman_idx
			ORDER BY zman_delivery_startime DESC;
	</select>
	
	<!-- 경매관리 - 경매예정 상품 목록 조회 -->
	<select id="selectAuctionManagingList" resultType="map">
		SELECT * 
			FROM 
				AUCTION_MANAGING am 
			LEFT JOIN 
				AUCTION_PRODUCT ap 
			ON 
				am.auction_idx = ap.auction_idx		
	</select>
	
	<!-- 경매관리 - 경매예정 상품 정보 조회 -->
	<select id="selectAuctionManaging" resultType="map">
		SELECT * 
			FROM 
				AUCTION_MANAGING am 
			LEFT JOIN 
				AUCTION_PRODUCT ap 
			ON 
				am.auction_idx = ap.auction_idx	
			WHERE 
				am.auction_idx = #{auction_idx}	
	</select>
	
	<!-- 경매관리 - 경매예정 상품 정보 수정 -->
	<update id="updateAuctionManaging">
		UPDATE AUCTION_MANAGING
			SET
				auction_manage_check_status = #{auction_manage_check_status}
				<if test="!auction_manage_check_status.equals('검수완료') and !auction_manage_check_status.equals('경매불가')">
					, auction_manage_check_date = null
				</if>
				<if test="auction_manage_check_status.equals('검수완료') or auction_manage_check_status.equals('경매불가')">
					, auction_manage_check_date = #{auction_manage_check_date}
				</if>
			WHERE auction_managing_idx = #{auction_managing_idx}
	</update>
	
	
	<!-- 고객센터관리 - 공지사항 목록 조회 -->
	<select id="selectCsList"  resultType="map">
		SELECT * 
			FROM CS c 
			JOIN MEMBER m ON m.member_id = c.member_id
			WHERE cs_type = '공지'
			ORDER BY cs_date DESC
	</select>
	
	<!-- 고객센터관리 - 공지사항 '관리자'인지 확인 -->
	<select id="selectAdminMember" resultType="string">
		SELECT member_type FROM MEMBER
		WHERE member_id = #{member_id}
	</select>	
	
	<!-- 고객센터관리 - 공지사항 글쓰기 -->
	<insert id="insertNotice" parameterType="com.itwillbs.zero.vo.CsVO">
		INSERT INTO 
			CS(
				cs_idx
				, cs_subject
				, cs_content
				, cs_date
				, member_id
				, cs_type
				, cs_file
			)
			VALUES(
				null
				, #{cs_subject}
				, #{cs_content}
				, now()
				, #{member_id}
				, #{cs_type}
				, #{cs_file}
			)
	</insert>
	
	<!-- 고객센터관리 - 공지사항 글 정보 조회 -->
	<select id="selectCs" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT * 
			FROM CS c 
			JOIN MEMBER m ON m.member_id = c.member_id
			WHERE cs_idx = #{cs_idx}
	</select>
	
	<!-- 고객센터관리 - 공지사항 글수정 -->
	<update id="updateNotice">
		UPDATE CS
		SET
			cs_subject = #{cs_subject}
			, cs_content = #{cs_content}
			, cs_date = now()
			, member_id = #{member_id}
			, cs_file = #{cs_file}
		WHERE cs_idx = #{cs_idx}
	</update>
	
	<!-- 고객센터관리 - 공지사항 글삭제 - DELETE  -->
	<delete id="deleteNotice">
		DELETE FROM CS
		WHERE cs_idx = #{cs_idx}
	</delete>
	
	<!-- 고객센터관리 - 1:1 문의 게시판 조회하기 - SELECT -->
	<select id="selectCsQnAList" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM CS
			WHERE cs_type = "1:1문의"
	</select>
	
	<!-- 고객센터관리 - 1:1 문의 게시판 상세 페이지로 이동하기 - SELECT -->
	<select id="selectCsQnADetail" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM CS
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</select>
	
	<!-- 고객센터 관리 - 1:1 문의글 삭제하기 - DELETE -->
	<delete id="deleteQnA">
		DELETE FROM CS
		WHERE cs_idx = #{cs_idx}
	</delete>
	
	<!-- 고객센터 관리 - 1:1 문의 답변 등록하기 - UPDATE -->
	<update id="updateReplyQnA">
		UPDATE
				CS
			SET cs_reply = #{cs_reply}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 1:1 문의 답변 수정하기 - UPDATE -->
	<update id="updateReplyModifyQnA">
		UPDATE
				CS
			SET cs_reply = #{cs_reply}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 게시판 조회하기 - SELECT  -->
	<select id="selectFaQ" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM CS
			WHERE cs_type = "자주묻는질문"
	</select>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 상세페이지로 이동하기 - SELECT -->
	<select id="selectFaQDetail">
		SELECT *
			FROM CS
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</select>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 등록하기 - INSERT -->
	<insert id="insertFaQ" parameterType="com.itwillbs.zero.vo.CsVO">
		INSERT INTO 
			CS(
				cs_idx
				, cs_info_idx
				, cs_subject
				, cs_content
				, cs_date
				, member_id
				, cs_type
				, cs_file
			)
			VALUES(
				null
				, #{cs_info_idx}
				, #{cs_subject}
				, #{cs_content}
				, now()
				, #{member_id}
				, #{cs_type}
				, #{cs_file}
			) 
	</insert>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 수정하기 - UPDATE -->
	<update id="updateFaq">
		UPDATE
				CS
			SET
				cs_subject = #{cs_subject}
				, cs_content = #{cs_content}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 삭제하기 -->
	<delete id="deleteFaq">
			DELETE
				FROM 
					CS
			WHERE cs_idx = #{cs_idx}
	</delete>
</mapper>
