<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.zero.mapper.AdminMapper">
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" resultType="com.itwillbs.zero.vo.MemberVO">
		SELECT * FROM MEMBER 
		ORDER BY member_date DESC
	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="selectMember" resultType="com.itwillbs.zero.vo.MemberVO">
		SELECT * FROM MEMBER
		WHERE member_idx = #{member_idx}
	</select>
	
	<!-- 회원관리 - 회원 피신고 건수 조회 -->
	<select id="selectMemberReportCount">
		SELECT COUNT(*) 
			FROM REPORT
			WHERE reported_member_id = #{member_id}
	</select>
	
	
	<!-- 회원관리 - 회원 정보 삭제 -->
	<delete id="deleteMemebr">
		DELETE FROM MEMBER
		WHERE member_idx = #{member_idx}
	</delete>
	
	<!-- 회원관리 - 회원 정보 수정 -->
	<update id="updateMember">
		UPDATE MEMBER
			SET
				member_status = #{member_status}
				, member_phone = #{member_phone}
				, member_mail_auth = #{member_mail_auth}
				, member_type = #{member_type}
				, member_bank_auth = #{member_bank_auth}
				<if test="!member_status.equals('탈퇴')">
					, member_withdrawal = null
				</if>
				<if test="member_status.equals('탈퇴')">
					, member_withdrawal = #{member_withdrawal}
				</if>
			WHERE member_idx = #{member_idx}
	</update>
	
	<!-- 회원관리 - 회원 신고 목록 조회 -->
	<select id="selectMemberReportList" resultType="com.itwillbs.zero.vo.ReportVO">
		SELECT * FROM REPORT
			WHERE 
				report_type = '회원'
			<if test="!reported_member_id.equals('')">
				AND
					reported_member_id = #{reported_member_id}
			</if>
	</select>
	
	<!-- 회원관리 - 회원 신고 정보 조회 -->
	<select id="selectMemberReportDetail" resultType="com.itwillbs.zero.vo.ReportVO">
		SELECT * FROM REPORT
		WHERE report_idx = #{report_idx}
	</select>
	
	<!-- 회원관리 - 회원 신고 정보 수정(처리상태 변경) -->
	<update id="updateMemberReport">
		UPDATE REPORT
			SET 
				report_status = #{report_status}
			WHERE 
				report_idx = #{report_idx}
	</update>
	
	<!-- zman 관리 - zman 목록 조회 -->
	<select id="selectZmanList" resultType="com.itwillbs.zero.vo.ZmanVO">
		SELECT * FROM ZMAN
		ORDER BY zman_date DESC
	</select>

	<!-- zman 관리 - zman 정보 조회 -->
	<select id="selectZman" resultType="com.itwillbs.zero.vo.ZmanVO">
		SELECT
			z.*, m.member_birth, zp.zpay_bank_name , zp.zpay_bank_account
			FROM
				ZMAN z
			JOIN
				`MEMBER` m 
			ON
				z.zman_id = m.member_id
			JOIN
				ZPAY zp 
			ON
				zp.member_id = z.zman_id 
			WHERE
				zman_idx = #{zman_idx}
	</select>
	
	<!-- zman관리 - zman 정보 삭제 -->
	<delete id="deleteZamn">
		DELETE FROM ZMAN
		WHERE zman_idx = #{zman_idx}
	</delete>
	
	<!-- zman관리 - zman 정보 수정 -->
	<update id="updateZman">
		UPDATE ZMAN
			SET
				zman_status = #{zman_status}
				, zman_phone = #{zman_phone}
				, zman_transport = #{zman_transport}
				<if test="!zman_status.equals('탈퇴')">
					, zman_withdrawal = null
				</if>
				<if test="zman_status.equals('탈퇴')">
					, zman_withdrawal = #{zman_withdrawal}
				</if>
			WHERE zman_idx = #{zman_idx}
	</update>
	
	<!-- zman관리 - zman 상태가 '활동'으로 변경되면 MEMBER.member_type 'Z맨'으로 변경 -->
	<update id="updateZmanMemberType">
		UPDATE MEMBER
		SET member_type = 'Z맨'
		WHERE member_id = #{zman_id}
	</update>
	
	<!--  zman 관리 - 배달 내역 목록 조회 - SELECT -->
	<select id="selectDeliveryList" resultType="com.itwillbs.zero.vo.ZmanDeliveryVO">
			SELECT *
			FROM 
				ZMAN_DELIVERY zd 
			JOIN 
				ORDER_SECONDHAND os 
				ON 
					os.order_secondhand_idx = zd.order_secondhand_idx; 
	</select>
	
	<!--  zman 관리 - zman 배달 내역 상세 조회 - SELECT -->
	<select id="selectDeliveryDetail" resultType="com.itwillbs.zero.vo.ZmanDeliveryVO">
		SELECT
				zd.*
				, os.order_secondhand_product 
				, z.zman_name
				, ze.*
				, zrh.*
			FROM
				ZMAN_DELIVERY zd 
			JOIN 
				ORDER_SECONDHAND os 
				ON
					zd.order_secondhand_idx = os.order_secondhand_idx
			JOIN
				ZMAN z 
				ON 
					zd.zman_id = z.zman_id
			JOIN
				ZMAN_EARNING ze 
				ON
					ze.zman_delivery_idx  = zd.zman_delivery_idx 
			JOIN
				ZMAN_REFUND_HISTORY zrh 
				ON
					ze.zman_earning_idx = zrh.zman_earning_idx 
			WHERE
				zd.zman_delivery_idx = #{zman_delivery_idx}; 
	</select>
	
	<!--  zman관리 - zman 신고 내역 조회 - SELECT -->
	<select id="selectZmanReportList" resultType="map">
		SELECT *
			FROM 
				REPORT
			WHERE report_type = 'ZMAN';
	</select>
	
	<!--   zman관리 - zman 신고 상세 페이지로 이동 - SELECT -->
	<select id="selectZmanReportDetail" resultType="map">
		SELECT
			  r.report_idx , r.report_content , r.report_status, r.report_datetime 
			, r.report_member_id , r.reported_zman_id , r.reported_delivery_idx 
			, zd.seller_id , zd.buyer_id , zd.zman_delivery_endtime 
			, os.order_secondhand_date , os.order_secondhand_product 
		FROM
			 REPORT r 
		JOIN 
			ZMAN_DELIVERY zd 
			ON 
				r.reported_delivery_idx = zd.zman_delivery_idx
		JOIN 
			ORDER_SECONDHAND os 
			ON 
				zd.zman_delivery_idx = os.zman_delivery_idx
		WHERE r.report_type ='ZMAN'
		ORDER BY r.report_datetime ASC;
	</select>
	
		<!-- 중고거래 관리 - 중고거래 상품 리스트 조회하기 - SELECT -->
	<select id="selectSecondhandManagingList" resultType="map">
		SELECT
			secondhand_idx
			, category_name
			, secondhand_subject
			, secondhand_price
			, secondhand_first_date
			, secondhand_deal_status
		FROM
			SECONDHAND_CATEGORY;
	</select>

	<!-- 중고거래관리 - 중고 거래 상품 상세 보기 페이지로 이동 - SELECT -->
	<select id="selectSecondhandManagingDetail" resultType="map">
		SELECT * 
			FROM
				SECONDHAND_CATEGORY
			WHERE
				secondhand_idx = #{secondhand_idx};
	</select>
	
	<!-- 중고거래관리 - 중고거래 등록 상품 삭제 - DELETE  -->
	<delete id="deleteSecondhandItem">
		DELETE FROM 
				SECONDHAND
			WHERE
				secondhand_idx = #{secondhand_idx}
	</delete>
	
	<!-- 중고거래관리 - 중고거래 주문(ORDER) 목록 페이지로 이동 - SELECT -->
	<select id="selectOrderSecondhandList" resultType="map">
		SELECT *
			FROM
				ORDER_SECONDHAND
			<if test="!member_id.equals('')">
				WHERE order_secondhand_seller = #{member_id}
				OR order_secondhand_buyer = #{member_id}
			</if>
	</select>
	
	<!-- 중고거래관리 - 중고거래 주문(ORDER) 상세 페이지로 이동 -->
	<select id="selectOrderSecondhandDetail" resultType="map">
	    <choose>
	        <when test="order_secondhand_type.equals('Z맨')">
	            SELECT os.*,
	                zd.zman_delivery_startspot, zd.zman_delivery_endspot,
	                zd.zman_delivery_accepttime, zd.zman_delivery_starttime, zd.zman_delivery_endtime,
	                zd.zman_delivery_commission, zd.zman_delivery_status,
	               	zd.zman_id, zd.zman_delivery_idx 
	            FROM
	            	ORDER_SECONDHAND os
	            JOIN
	            	ZMAN_DELIVERY zd
            		ON
            			os.order_secondhand_idx = zd.order_secondhand_idx
	            WHERE 
	            	os.order_secondhand_idx = #{order_secondhand_idx}
	        </when>
	        <otherwise>
	            SELECT *
	            FROM ORDER_SECONDHAND os
	            WHERE order_secondhand_idx = #{order_secondhand_idx}
	        </otherwise>
	    </choose>
	</select>
	
	<!-- 경매관리 - 경매 상품 목록 조회 -->
	<select id="selectAuctionProductList" resultType="map">
		SELECT *
			FROM 
				AUCTION_PRODUCT ap 
			LEFT JOIN 
				AUCTION_MANAGING am 
			ON 
				am.auction_idx = ap.auction_idx	
	</select>

	<!-- 경매관리 - 경매 상품 상세보기 -->
	<select id="selectAuctionProduct" resultType="map">
		SELECT *
			FROM 
				AUCTION_PRODUCT
			WHERE auction_idx = #{auction_idx}
	</select>

	<!-- 경매관리 - 경매예정 상품 목록 조회 -->
	<select id="selectAuctionManagingList" resultType="map">
		SELECT *
			FROM 
				AUCTION_MANAGING am 
			LEFT JOIN 
				AUCTION_PRODUCT ap 
			ON 
				am.auction_idx = ap.auction_idx	
			WHERE 
				auction_manage_status IS NULL 
			OR 
				auction_manage_status != '경매종료'
	</select>
	
	<!-- 경매관리 - 경매예정 상품 정보 조회 -->
	<select id="selectAuctionManaging" resultType="map">
		SELECT * 
			FROM 
				AUCTION_MANAGING am 
			LEFT JOIN 
				AUCTION_PRODUCT ap 
			ON 
				am.auction_idx = ap.auction_idx	
			WHERE 
				am.auction_idx = #{auction_idx}	
	</select>
	
	<!-- 경매관리 - 경매예정 상품 정보 수정 -->
	<update id="updateAuctionManaging">
		UPDATE AUCTION_MANAGING
			SET
				auction_manage_check_status = #{auction_manage_check_status}
				<if test="!auction_manage_check_status.equals('검수완료') and !auction_manage_check_status.equals('경매불가')">
					, auction_manage_check_date = null
					, auction_start_datetime = null
					, auction_end_datetime = null
				</if>
				<if test="auction_manage_check_status.equals('검수완료')">
					, auction_manage_check_date = #{auction_manage_check_date}
					, auction_start_datetime = #{auction_start_datetime}
					, auction_end_datetime = #{auction_end_datetime}
				</if>
				<if test="auction_manage_check_status.equals('경매불가')">
					, auction_manage_check_date = #{auction_manage_check_date}
					, auction_start_datetime = null
					, auction_end_datetime = null
				</if>
			WHERE auction_managing_idx = #{auction_managing_idx}
	</update>
	
	<!-- 경매관리 - 경매 내역 목록 조회 -->
	<select id="selectOrderAutionList" resultType="map">
		SELECT * 
			FROM 
				ORDER_AUCTION oa
			LEFT JOIN 
				AUCTION_PRODUCT ap
			ON 
				oa.auction_idx = ap.auction_idx
			LEFT JOIN 
				AUCTION_MANAGING am
			ON 
				am.auction_idx = ap.auction_idx
			<if test="!member_id.equals('')">
				WHERE oa.order_auction_seller = #{member_id}
				OR oa.order_auction_buyer = #{member_id}
			</if>
		
	</select>

	<!-- 경매관리 - 경매 내역 목록 조회 -->
	<select id="selectAuctionOrder" resultType="map">
		SELECT * 
			FROM 
				ORDER_AUCTION oa
			LEFT JOIN 
				AUCTION_PRODUCT ap
			ON 
				oa.auction_idx = ap.auction_idx
			LEFT JOIN 
				AUCTION_MANAGING am
			ON 
				am.auction_idx = ap.auction_idx
			WHERE 
				order_auction_idx = #{order_auction_idx}
	</select>
	
	
	<!-- 고객센터관리 - 공지사항 목록 조회 -->
	<select id="selectCsList"  resultType="map">
		SELECT * 
			FROM CS c 
			JOIN MEMBER m ON m.member_id = c.member_id
			WHERE cs_type = '공지'
			ORDER BY cs_date DESC
	</select>
	
	<!-- 고객센터관리 - 공지사항 '관리자'인지 확인 -->
	<select id="selectAdminMember" resultType="string">
		SELECT member_type FROM MEMBER
		WHERE member_id = #{member_id}
	</select>	
	
	<!-- 고객센터관리 - 공지사항 글쓰기 -->
	<insert id="insertNotice" parameterType="com.itwillbs.zero.vo.CsVO">
		INSERT INTO 
			CS(
				cs_idx
				, cs_subject
				, cs_content
				, cs_date
				, member_id
				, cs_type
				, cs_file
			)
			VALUES(
				null
				, #{cs_subject}
				, #{cs_content}
				, now()
				, #{member_id}
				, #{cs_type}
				, #{cs_file}
			)
	</insert>
	
	<!-- 고객센터관리 - 공지사항 글 정보 조회 -->
	<select id="selectCs" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT * 
			FROM 
				CS c 
			JOIN MEMBER m ON m.member_id = c.member_id
			WHERE cs_idx = #{cs_idx}
	</select>
	
	<!-- 고객센터관리 - 공지사항 글수정 -->
	<update id="updateNotice">
		UPDATE CS
		SET
			cs_subject = #{cs_subject}
			, cs_content = #{cs_content}
			, cs_date = now()
			, member_id = #{member_id}
			, cs_file = #{cs_file}
		WHERE cs_idx = #{cs_idx}
	</update>
	
	<!-- 고객센터관리 - 공지사항 글삭제 - DELETE  -->
	<delete id="deleteNotice">
		DELETE FROM CS
		WHERE cs_idx = #{cs_idx}
	</delete>
	
	<!-- 고객센터관리 - 1:1 문의 게시판 조회하기 - SELECT -->
	<select id="selectCsQnAList" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM 
				CS
			WHERE cs_type = "1:1문의"
	</select>
	
	<!-- 고객센터관리 - 1:1 문의 게시판 상세 페이지로 이동하기 - SELECT -->
	<select id="selectCsQnADetail" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM 
				CS
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</select>
	
	<!-- 고객센터 관리 - 1:1 문의글 삭제하기 - DELETE -->
	<delete id="deleteQnA">
		DELETE FROM CS
		WHERE cs_idx = #{cs_idx}
	</delete>
	
	<!-- 고객센터 관리 - 1:1 문의 답변 등록하기 - UPDATE -->
	<update id="updateReplyQnA">
		UPDATE
				CS
			SET cs_reply = #{cs_reply}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 1:1 문의 답변 수정하기 - UPDATE -->
	<update id="updateReplyModifyQnA">
		UPDATE
				CS
			SET cs_reply = #{cs_reply}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 게시판 조회하기 - SELECT  -->
	<select id="selectFaQ" resultType="com.itwillbs.zero.vo.CsVO">
		SELECT *
			FROM
				CS
			WHERE cs_type = "자주묻는질문"
	</select>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 상세페이지로 이동하기 - SELECT -->
	<select id="selectFaQDetail">
		SELECT *
			FROM
				CS
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</select>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 등록하기 - INSERT -->
	<insert id="insertFaQ" parameterType="com.itwillbs.zero.vo.CsVO">
		INSERT INTO 
			CS(
				cs_idx
				, cs_info_idx
				, cs_subject
				, cs_content
				, cs_date
				, member_id
				, cs_type
				, cs_file
			)
			VALUES(
				null
				, #{cs_info_idx}
				, #{cs_subject}
				, #{cs_content}
				, now()
				, #{member_id}
				, #{cs_type}
				, #{cs_file}
			) 
	</insert>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 수정하기 - UPDATE -->
	<update id="updateFaq">
		UPDATE
				CS
			SET
				cs_subject = #{cs_subject}
				, cs_content = #{cs_content}
			WHERE cs_idx = #{cs_idx}
			AND cs_info_idx = #{cs_info_idx}
	</update>
	
	<!-- 고객센터 관리 - 자주 묻는 질문 삭제하기 - DELETE -->
	<delete id="deleteFaq">
		DELETE
			FROM 
				CS
		WHERE cs_idx = #{cs_idx}
	</delete>
	
	<!-- ZPAY 관리 - 충전/환급 목록 조회 -->
	<select id="selectZpayDepositWithdrawList" resultType="com.itwillbs.zero.vo.ZpayHistoryVO">
		SELECT * FROM ZPAY_HISTORY
		WHERE zpay_deal_type = '충전'
		OR zpay_deal_type = '환급'
		ORDER BY zpay_time DESC
	</select>

	<!-- ZPAY 관리 - 충전/환급 정보 조회 -->
	<select id="selectZpayDepositWithdraw" resultType="com.itwillbs.zero.vo.ZpayHistoryVO">
		SELECT * FROM ZPAY_HISTORY
		WHERE (zpay_deal_type = '충전'
				OR zpay_deal_type = '환급')
		AND zpay_history_idx = #{zpay_history_idx}
		
	</select>

	<!-- ZPAY 관리 - 사용/수익 목록 조회 -->
	<select id="selectZpayUseList" resultType="com.itwillbs.zero.vo.ZpayHistoryVO">
		SELECT * FROM ZPAY_HISTORY
		WHERE zpay_deal_type LIKE '중고%'
		OR zpay_deal_type LIKE '경매%'
		OR zpay_deal_type LIKE '검수비'
		ORDER BY zpay_time DESC
	</select>

	<!-- ZPAY 관리 - 사용/수익 정보 조회 -->
	<select id="selectZpayUse" resultType="com.itwillbs.zero.vo.ZpayHistoryVO">
		SELECT * FROM ZPAY_HISTORY
		WHERE (zpay_deal_type LIKE '중고%'
				OR zpay_deal_type LIKE '경매%')
		AND zpay_history_idx = #{zpay_history_idx}
	</select>
	
	<!-- 계좌 관리 - 약정 계좌 내역 목록 조회 -->
	<select id="selectZeroAccountHistoryList" resultType="com.itwillbs.zero.vo.ZeroAccountHistoryVO">
		SELECT * FROM ZERO_ACCOUNT_HISTORY	
		ORDER BY zero_account_time DESC
	</select>

	<!-- ZERO_ACCOUNT_HISTORY 잔액 조회 -->
	<select id="selectZeroAccountBalance" resultType="Integer">
		SELECT IFNULL(zero_account_balance, 0) 
			FROM ZERO_ACCOUNT_HISTORY
			WHERE zero_account_history_idx 
					= (SELECT MAX(zero_account_history_idx) FROM ZERO_ACCOUNT_HISTORY)
	</select>

	<!-- 계좌 관리 - 회원 계좌 목록 조회 -->
	<select id="selectMemberZpayList" resultType="com.itwillbs.zero.vo.ZpayVO">
		SELECT * FROM ZPAY z
		LEFT JOIN MEMBER m ON m.member_id = z.member_id
		WHERE member_type = '회원'
		
	</select>
	
	<!-- 계좌 관리 - 회원 계좌 거래 정보 조회 -->
	<select id="selectMemberZpayHistoryList" resultType="com.itwillbs.zero.vo.ZpayHistoryVO">
		SELECT * FROM ZPAY_HISTORY
		WHERE zpay_idx = #{zpay_idx}
	</select>

	<!-- 계좌 관리 - ZMAN 계좌 목록 조회 -->
	<select id="selectZmanZpayList" resultType="com.itwillbs.zero.vo.ZpayVO">
		SELECT * FROM ZPAY z
		LEFT JOIN MEMBER m ON m.member_id = z.member_id
		WHERE member_type = 'Z맨'
	</select>
	
</mapper>
